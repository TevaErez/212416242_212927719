{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/TEVAER_1/proj3/1.0.0"
  } ],
  "info" : {
    "version" : "1.0.0",
    "title" : "Grandma and friends's recipes",
    "description" : "The Recipes Website API provides developers with access to a comprehensive collection of recipes and related information from a recipes website. It allows developers to integrate recipe data into their own applications, websites, or services, enabling users to search for recipes, retrieve detailed recipe information, and perform various recipe-related actions."
  },
  "paths" : {
    "/login" : {
      "get" : {
        "tags" : [ "login" ],
        "operationId" : "getToken",
        "parameters" : [ {
          "name" : "username",
          "in" : "query",
          "description" : "The user's username",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "The user's password",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "token" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register" : {
      "post" : {
        "tags" : [ "Register" ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "username" : {
                    "type" : "string",
                    "minLength" : 3,
                    "maxLength" : 8,
                    "pattern" : "^[A-Za-z]+$",
                    "description" : "The username for the new user"
                  },
                  "firstName" : {
                    "type" : "string",
                    "description" : "The first name of the new user"
                  },
                  "lastName" : {
                    "type" : "string",
                    "description" : "The last name of the new user"
                  },
                  "country" : {
                    "type" : "string",
                    "description" : "The country of the new user"
                  },
                  "password" : {
                    "type" : "string",
                    "minLength" : 5,
                    "maxLength" : 10,
                    "pattern" : "^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]+$",
                    "description" : "The password for the new user"
                  },
                  "confirmPassword" : {
                    "type" : "string",
                    "description" : "Confirm the password for the new user",
                    "const" : {
                      "$data" : "1/password"
                    }
                  },
                  "email" : {
                    "type" : "string",
                    "format" : "email",
                    "description" : "The email for the new user"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful registration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "token" : {
                      "type" : "string",
                      "description" : "The authentication token for the new user"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request - the username is already taken or the passwords do not match or the country doesn't exist"
          },
          "500" : {
            "description" : "Internal server error - the registration could not be completed"
          }
        }
      }
    }
  }
}